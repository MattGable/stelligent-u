Description:  Matt G Templating for VPC 

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: MattGVPC

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.199.0.0/16

  # PublicSubnet1CIDR:
  #   Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
  #   Type: String
  #   Default: 10.199.10.0/24

  # PublicSubnet2CIDR:
  #   Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
  #   Type: String
  #   Default: 10.199.11.0/24

  MattSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.199.99.0/24

  # PrivateSubnet2CIDR:
  #   Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
  #   Type: String
  #   Default: 10.199.21.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: user
          Value: matthew.gable.labs
        - Key: stelligent-u-lesson
          Value: 4.1
        - Key: stelligent-u-lab
          Value: 4.1.1
        - Key: Name
          Value: !Ref EnvironmentName

# Create IGW and attach to VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # PublicSubnet1:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref VPC
  #     AvailabilityZone: !Select [ 0, !GetAZs '' ]
  #     CidrBlock: !Ref PublicSubnet1CIDR
  #     MapPublicIpOnLaunch: true
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  # PublicSubnet2:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref VPC
  #     AvailabilityZone: !Select [ 1, !GetAZs  '' ]
  #     CidrBlock: !Ref PublicSubnet2CIDR
  #     MapPublicIpOnLaunch: true
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  MattSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref MattSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: user
          Value: matthew.gable.labs
        - Key: stelligent-u-lesson
          Value: 4.1
        - Key: stelligent-u-lab
          Value: 4.1.1
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  # PrivateSubnet2:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref VPC
  #     AvailabilityZone: !Select [ 1, !GetAZs  '' ]
  #     CidrBlock: !Ref PrivateSubnet2CIDR
  #     MapPublicIpOnLaunch: false
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  # NatGateway1EIP:
  #   Type: AWS::EC2::EIP
  #   DependsOn: InternetGatewayAttachment
  #   Properties:
  #     Domain: vpc

  # NatGateway2EIP:
  #   Type: AWS::EC2::EIP
  #   DependsOn: InternetGatewayAttachment
  #   Properties:
  #     Domain: vpc

  # NatGateway1:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt NatGateway1EIP.AllocationId
  #     SubnetId: !Ref PublicSubnet1

  # NatGateway2:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     AllocationId: !GetAtt NatGateway2EIP.AllocationId
  #     SubnetId: !Ref PublicSubnet2

  # PublicRouteTable:
  #   Type: AWS::EC2::RouteTable
  #   Properties:
  #     VpcId: !Ref VPC
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${EnvironmentName} Public Routes

  # DefaultPublicRoute:
  #   Type: AWS::EC2::Route
  #   DependsOn: InternetGatewayAttachment
  #   Properties:
  #     RouteTableId: !Ref PublicRouteTable
  #     DestinationCidrBlock: 0.0.0.0/0
  #     GatewayId: !Ref InternetGateway

  # PublicSubnet1RouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     RouteTableId: !Ref PublicRouteTable
  #     SubnetId: !Ref PublicSubnet1

  # PublicSubnet2RouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     RouteTableId: !Ref PublicRouteTable
  #     SubnetId: !Ref PublicSubnet2


  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: user
          Value: matthew.gable.labs
        - Key: stelligent-u-lesson
          Value: 4.1
        - Key: stelligent-u-lab
          Value: 4.1.1
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  # DefaultPrivateRoute1:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId: !Ref PrivateRouteTable1
  #     DestinationCidrBlock: 0.0.0.0/0
  #     NatGatewayId: !Ref NatGateway1

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  MattSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref MattSubnet1

  # PrivateRouteTable2:
  #   Type: AWS::EC2::RouteTable
  #   Properties:
  #     VpcId: !Ref VPC
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${EnvironmentName} Private Routes (AZ2)

  # DefaultPrivateRoute2:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId: !Ref PrivateRouteTable2
  #     DestinationCidrBlock: 0.0.0.0/0
  #     NatGatewayId: !Ref NatGateway2

  # PrivateSubnet2RouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     RouteTableId: !Ref PrivateRouteTable2
  #     SubnetId: !Ref PrivateSubnet2

  # NoIngressSecurityGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupName: "no-ingress-sg"
  #     GroupDescription: "Security group with no ingress rule"
  #     VpcId: !Ref VPC

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !GetAtt VPC.VpcId
    Export:
      Name: mattgvpcid

  # PublicSubnets:
  #   Description: A list of the public subnets
  #   Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]

  # PrivateSubnets:
  #   Description: A list of the private subnets
  #   Value: !Join [ ",", [ !Ref MattSubnet1, !Ref PrivateSubnet2 ]]

  # PublicSubnet1:
  #   Description: A reference to the public subnet in the 1st Availability Zone
  #   Value: !Ref PublicSubnet1

  # PublicSubnet2:
  #   Description: A reference to the public subnet in the 2nd Availability Zone
  #   Value: !Ref PublicSubnet2

  MattSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !GetAtt MattSubnet1.SubnetId
    Export:
      Name: mattgpubsubnetid1

  # PrivateSubnet2:
  #   Description: A reference to the private subnet in the 2nd Availability Zone
  #   Value: !Ref PrivateSubnet2

  # NoIngressSecurityGroup:
  #   Description: Security group with no ingress rule
  #   Value: !Ref NoIngressSecurityGroup